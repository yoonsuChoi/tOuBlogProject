<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       ">
       
	<!-- 커넥션 풀을 이용하는 DataSource 설정 -->
	<bean name="dataSource" class="org.apache.tomcat.dbcp.dbcp2.BasicDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"></property>
		<property name="username" value="scott"></property>
		<property name="password" value="tiger"></property>
	</bean>

	<!-- NamedParametertemplate 템플릿클래스사용 p. 484 -->
	<bean name="npTemplate"
		class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg ref="dataSource" />
	</bean>


	<!-- JDBC기반 트랜잭션 관리자 설정 -->
	<bean name="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- p.514 TransactionTemplate 이용한 설정 -->
	<bean name="transactionTemplate"
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="transactionManager"></property>
	</bean>
	
	<!-- 트랜잭션 AOP 처리를 위한 TransactionInterceptor 객체 등록 -->
	<!-- 
	<bean class="org.springframework.transaction.interceptor.TransactionInterceptor" name="transactionInterceptor">
		<property name="transactionManager" ref="transactionManager"></property>
		<property name="transactionAttributes">
			<props>
				<prop key="insertAndPointUpOfMember">PROPAGATION_REQUIRED</prop>
			</props>
		</property>

	</bean>
	<bean name="noticeDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target" ref="noticeDaoImp"></property>
		<property name="interceptorNames">
			<list>
				<value>transactionInterceptor</value>
				
			</list>
		</property>
	</bean>
	 -->
	<!-- Mybatis 사용하기 위한 빈 객체 설정 부분 -->
	   <bean id="sqlSessionFactory"
	      class="org.mybatis.spring.SqlSessionFactoryBean">
	      <property name="dataSource" ref="dataSource" ></property>
	      <!-- <property name="mapperLocations" value="classpath:com.newlecture.web.newlecture.dao/mapper/*.xml"></property> -->
	      <property name="mapperLocations">
	       <list>
	        <value>classpath:com/newlecture/web/dao/mapper/*.xml</value>
	       </list>
	      </property>
	   </bean>
	   <bean id="sqlSession"
	    class="org.mybatis.spring.SqlSessionTemplate">
	      <constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg>
	   </bean>
</beans>